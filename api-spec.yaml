openapi: 3.0.1
info:
  title: Movies API
  description: |
    API for managing and retrieving movie information.
    This service provides comprehensive movie data including:
    - Basic movie information (title, release date, genres)
    - Movie ratings and reviews
    - Filtering by year and genre
    - Pagination support for all list endpoints
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Local development server
tags:
- name: Movies
  description: API for managing movies and retrieving movie information
paths:
  /api/v1/movies/:
    get:
      tags:
      - Movies
      summary: Get all movies
      description: |
        Retrieves a paginated list of all movies, sorted by release date in descending order.
        Returns 404 if no movies are found.
        The page parameter is 1-based indexing.
      operationId: getAllMovies
      parameters:
      - name: page
        in: query
        description: Page number (1-based indexing)
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 1
        example: 1
      - name: size
        in: query
        description: Number of items per page (minimum 1)
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 50
        example: 50
      responses:
        "200":
          description: Successfully retrieved movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
              example:
                - movieId: 1
                  title: "The Shawshank Redemption"
                  releaseDate: "1994-09-23"
                  genre: ["Drama"]
                  director: "Frank Darabont"
                  rating: 9.3
                  runtime: 142
                  plot: "Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency."
        "400":
          description: Invalid pagination parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 400
                message: "Invalid pagination parameters: page must be >= 0 and size must be > 0"
                details: "uri=/api/v1/movies/"
        "404":
          description: No movies found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 404
                message: "No movies found"
                details: "uri=/api/v1/movies/"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 500
                message: "An error occurred while retrieving movies"
                details: "Database error"
  /api/v1/movies/{id}:
    get:
      tags:
      - Movies
      summary: Get movie by ID
      description: |
        Retrieves detailed information about a specific movie by its ID.
        Returns 404 if the movie is not found.
        The response includes comprehensive movie details including plot, director, and runtime.
      operationId: getMovieById
      parameters:
      - name: id
        in: path
        description: ID of the movie to retrieve (must be a positive integer)
        required: true
        schema:
          type: string
        example: "1"
      responses:
        "200":
          description: Successfully retrieved movie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
              example:
                movieId: 1
                title: "The Shawshank Redemption"
                releaseDate: "1994-09-23"
                genre: ["Drama"]
                director: "Frank Darabont"
                rating: 9.3
                runtime: 142
                plot: "Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency."
        "400":
          description: Invalid ID format or value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              examples:
                invalidFormat:
                  value:
                    statusCode: 400
                    message: "Invalid ID format: abc"
                    details: "uri=/api/v1/movies/abc"
                negativeId:
                  value:
                    statusCode: 400
                    message: "ID must be a positive integer"
                    details: "uri=/api/v1/movies/-1"
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 404
                message: "Movie not found with id: 999"
                details: "uri=/api/v1/movies/999"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 500
                message: "An error occurred while retrieving the movie"
                details: "Database error"
  /api/v1/movies/year/{year}:
    get:
      tags:
      - Movies
      summary: Get movies by year
      description: |
        Retrieves a paginated list of movies released in the specified year.
        The year must be between 1900 and 2100.
        Returns 404 if no movies are found for the given year.
        Results are sorted by release date in descending order.
      operationId: getMoviesByYear
      parameters:
      - name: year
        in: path
        description: Year of release (must be between 1900 and 2100)
        required: true
        schema:
          type: string
        example: "2022"
      - name: page
        in: query
        description: Page number (0-based indexing)
        required: false
        schema:
          type: integer
          format: int32
          minimum: 0
          default: 0
        example: 0
      - name: size
        in: query
        description: Number of items per page (minimum 1)
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 10
        example: 10
      responses:
        "200":
          description: Successfully retrieved movies for the specified year
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
              example:
                - movieId: 1
                  title: "Top Gun: Maverick"
                  releaseDate: "2022-05-27"
                  genre: ["Action", "Drama"]
                  director: "Joseph Kosinski"
                  rating: 8.3
                  runtime: 130
        "400":
          description: Invalid year format or pagination parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              examples:
                invalidFormat:
                  value:
                    statusCode: 400
                    message: "Invalid year format: abc"
                    details: "uri=/api/v1/movies/year/abc"
                invalidYear:
                  value:
                    statusCode: 400
                    message: "Year must be between 1900 and 2100"
                    details: "uri=/api/v1/movies/year/2200"
                invalidPagination:
                  value:
                    statusCode: 400
                    message: "Invalid pagination parameters: page must be >= 0 and size must be > 0"
                    details: "uri=/api/v1/movies/year/2022"
        "404":
          description: No movies found for the specified year
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 404
                message: "No movies found for year: 2025"
                details: "uri=/api/v1/movies/year/2025"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 500
                message: "An error occurred while retrieving movies by year"
                details: "Database error"
  /api/v1/movies/genre/{genre}:
    get:
      tags:
      - Movies
      summary: Get movies by genre
      description: |
        Retrieves a paginated list of movies that match the specified genre.
        The genre parameter is case-sensitive.
        Returns 404 if no movies are found for the given genre.
      operationId: getMoviesByGenre
      parameters:
      - name: genre
        in: path
        description: Genre to filter by
        required: true
        schema:
          type: string
        example: "Action"
      - name: page
        in: query
        description: Page number (1-based indexing)
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 1
        example: 1
      - name: size
        in: query
        description: Number of items per page (minimum 1)
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 50
        example: 50
      responses:
        "200":
          description: Successfully retrieved movies for the specified genre
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
              example:
                - movieId: 1
                  title: "The Dark Knight"
                  releaseDate: "2008-07-18"
                  genre: ["Action", "Crime", "Drama"]
                  director: "Christopher Nolan"
                  rating: 9.0
                  runtime: 152
        "400":
          description: Invalid genre parameter or pagination parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              examples:
                emptyGenre:
                  value:
                    statusCode: 400
                    message: "Genre parameter cannot be null or empty"
                    details: "uri=/api/v1/movies/genre/"
                invalidPagination:
                  value:
                    statusCode: 400
                    message: "Invalid pagination parameters: page must be >= 0 and size must be > 0"
                    details: "uri=/api/v1/movies/genre/Action"
        "404":
          description: No movies found for the specified genre
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 404
                message: "No movies found for genre: Western"
                details: "uri=/api/v1/movies/genre/Western"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
              example:
                statusCode: 500
                message: "An error occurred while retrieving movies by genre"
                details: "Database error"
components:
  schemas:
    Movie:
      type: object
      description: Detailed movie information
      properties:
        movieId:
          type: integer
          format: int32
          description: The unique identifier of the movie
          minimum: 1
        title:
          type: string
          description: The title of the movie
        releaseDate:
          type: string
          format: date
          description: The release date of the movie (YYYY-MM-DD)
        genre:
          type: array
          description: List of genres for the movie
          items:
            type: string
        director:
          type: string
          description: The director of the movie
        rating:
          type: number
          format: double
          description: The average rating of the movie (0-10 scale)
          minimum: 0
          maximum: 10
        runtime:
          type: integer
          format: int32
          description: The runtime of the movie in minutes
          minimum: 0
      required:
        - movieId
        - title
        - releaseDate
        - genre
        - director
        - runtime
    ErrorDetails:
      type: object
      description: Standard error response format for all API errors
      properties:
        statusCode:
          type: integer
          format: int32
          description: HTTP status code of the error
        message:
          type: string
          description: Human-readable error message
        details:
          type: string
          description: Additional error details or context
      required:
        - statusCode
        - message
        - details
